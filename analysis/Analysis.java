/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAGraphGraph(AGraphGraph node);
    void caseADigraphGraph(ADigraphGraph node);
    void caseAEmptyStmtList(AEmptyStmtList node);
    void caseAContinueStmtList(AContinueStmtList node);
    void caseANstmtStmt(ANstmtStmt node);
    void caseAEstmtStmt(AEstmtStmt node);
    void caseAAtstmtStmt(AAtstmtStmt node);
    void caseAAsstmtStmt(AAsstmtStmt node);
    void caseASstmtStmt(ASstmtStmt node);
    void caseAGraphasAttrStmt(AGraphasAttrStmt node);
    void caseANodeasAttrStmt(ANodeasAttrStmt node);
    void caseAEdgeasAttrStmt(AEdgeasAttrStmt node);
    void caseAAttrList(AAttrList node);
    void caseACommasepAList(ACommasepAList node);
    void caseANodeesEdgeStmt(ANodeesEdgeStmt node);
    void caseASubesEdgeStmt(ASubesEdgeStmt node);
    void caseANodeerEdgerhs(ANodeerEdgerhs node);
    void caseASuberEdgerhs(ASuberEdgerhs node);
    void caseANodeStmt(ANodeStmt node);
    void caseANodeId(ANodeId node);
    void caseAIportPort(AIportPort node);
    void caseANportPort(ANportPort node);
    void caseACportPort(ACportPort node);
    void caseASubgSubgraph(ASubgSubgraph node);
    void caseANsubgSubgraph(ANsubgSubgraph node);
    void caseADsubgSubgraph(ADsubgSubgraph node);
    void caseACpnCompassPt(ACpnCompassPt node);
    void caseACpneCompassPt(ACpneCompassPt node);
    void caseACpeCompassPt(ACpeCompassPt node);
    void caseACpseCompassPt(ACpseCompassPt node);
    void caseACpsCompassPt(ACpsCompassPt node);
    void caseACpswCompassPt(ACpswCompassPt node);
    void caseACpwCompassPt(ACpwCompassPt node);
    void caseACpnwCompassPt(ACpnwCompassPt node);
    void caseACpcCompassPt(ACpcCompassPt node);
    void caseACpuCompassPt(ACpuCompassPt node);

    void caseTStrict(TStrict node);
    void caseTDigraphk(TDigraphk node);
    void caseTSubgraphk(TSubgraphk node);
    void caseTGraphk(TGraphk node);
    void caseTNodek(TNodek node);
    void caseTEdgek(TEdgek node);
    void caseTLeftbrace(TLeftbrace node);
    void caseTRightbrace(TRightbrace node);
    void caseTLeftbracket(TLeftbracket node);
    void caseTRightbracket(TRightbracket node);
    void caseTEdgeop(TEdgeop node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTAssignment(TAssignment node);
    void caseTComma(TComma node);
    void caseTN(TN node);
    void caseTNe(TNe node);
    void caseTE(TE node);
    void caseTSe(TSe node);
    void caseTS(TS node);
    void caseTSw(TSw node);
    void caseTW(TW node);
    void caseTNw(TNw node);
    void caseTC(TC node);
    void caseTU(TU node);
    void caseTId(TId node);
    void caseTWhitespaces(TWhitespaces node);
    void caseTComment(TComment node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
